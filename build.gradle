plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'kdt.jpa'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
	testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.testcontainers:testcontainers:1.19.2"
	testImplementation "org.testcontainers:junit-jupiter:1.19.2"
	testImplementation "org.testcontainers:mysql:1.19.2"

	//rest-docs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

ext {
	snippetsDir = file('build/generated-snippets')	//snippets 파일을 저장할 디렉토리 생성
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor{ //asciidoctor 설정 task
	inputs.dir snippetsDir //snippets 디렉토리를 입력으로 함
	dependsOn test // test task를 의존하도록 하여, 문서 생성 전에 test를 수행하도록 함
}

bootJar {
	dependsOn asciidoctor
	copy {
		// src/docs/asciidoc == from 경로
		from "${asciidoctor.outputDir}"
		into 'src/main/resources/static/docs'
	}
}

bootJar{ //springboot를 이용한 jar 파일 생성 시 필요한 설정 task
	dependsOn asciidoctor //asciidoctor 를 의존하도록 하여, bootJar 생성 전에 asciidoctor task를 수행하도록 함
	//문서 생성 시, Jar 파일 내 static/docs 에도 복사되도록 함
	// src/docs/asciidoc == from 경로
	from "${asciidoctor.outputDir}"
	into 'src/main/resources/static/docs'
}
